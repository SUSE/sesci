- job:
    name: 'dashboard_v2-trigger'
    concurrent: true
    #project-type: matrix
    node: master
    #axes:
    #    - axis:
    #        name: DIST
    #        type: user-defined
    #        values:
    #            - sles
    #            - leap
    parameters:
        - string:
            name: TARGET_FLAVOR
            default: hg-30-ssd
            description: "OVH flavor"
        - string:
            name: sha1
        - string:
            name: leap42_1
            default: 'teuthology-opensuse-42.1-x86_64'
        - string:
            name: leap42_2
            default: 'teuthology-opensuse-42.2-x86_64'
        - string:
            name: leap42_3
            default: 'teuthology-opensuse-42.3-x86_64'
        - string:
            name: sle12_sp1
            default: 'teuthology-sle-12.2-x86_64'
        - string:
            name: sle12_sp2
            default: 'teuthology-sle-12.2-x86_64'
        - string:
            name: sle12_sp3
            default: 'teuthology-sle-12.3-x86_64'
        - string:
            name: DIST
            default: leap
    properties:
        - github:
            url: 'https://github.com/openattic/ceph/'
            display-name: ceph
        - build-discarder:
            num-to-keep: 99
        - authorization:
            anonymous:
                - job-read
                - job-status
    wrappers:
        - workspace-cleanup
        - ansicolor
    triggers:
        - github-pull-request:
            #admin-list:
            #white-list:
            org-list: ['suse']
            #cron: 'H/5 * * * *'
            cron: 'H/3 * * * *'
            #build-desc-template: "Ceph Pull Request"
            trigger-phrase: 'ok to test'
            #only-trigger-phrase: false
            permit-all: true
            allow-whitelist-orgs-as-admins: true
            #auto-close-on-faile: false
            white-list-target-branches:
                - wip-mgr-dashboard_v2 
            auth-id: 'susebot'
            status-add-test-results: true
            status-context: "dashboard_v2 test"
            triggered-status: "dashboard_v2 check triggered"
            started-status: "dashboard_v2 started"
            error-status: "Unexpected error in the dashboard_v2 test"
            success-status: "dashboard_v2 test passed"
            failure-status: "dashboard_v2 test failed"
            #error-comment: "Unexpected error in the make check"
            #success-comment: "The make check passed"
            #failure-comment: "The make check failed"
            # don't cancel build, because it aborts the top level job
            # and that does not allow cleanup ovh resources
            #cancel-builds-on-update: true
    builders:
        - shell: |
            #!/bin/bash
            #export tgt=${ghprbTargetBranch:-'master'}
            export tgt=ses5

            sles_ses6="sle12_sp3"
            sles_ses5="sle12_sp3"
            sles_ses4="sle12_sp2"
            sles_ses3="sle12_sp1"
            sles_master="sle12_sp3"
            leap_ses6="leap42_3"
            leap_ses5="leap42_3"
            leap_ses4="leap42_2"
            leap_ses3="leap42_1"
            leap_master="leap42_3"

            eval "export dst=\$${DIST}_${tgt}"

            echo TARGET_IMAGE=${!dst}   > target.properties
            echo DIST=${dst}           >> target.properties
            cat target.properties

        - inject:
            properties-file: 'target.properties'
        - trigger-builds:
            - project: 'dashboard_v2'
              predefined-parameters: |
                  TARGET_FILE=targets_${DIST}.properties
                  TARGET_IMAGE=${TARGET_IMAGE}
                  TARGET_FLAVOR=${TARGET_FLAVOR}
                  CEPH_REPO_URL=https://github.com/openattic/ceph.git
                  CEPH_BRANCH=${ghprbTargetBranch}
                  CEPH_REF=${sha1}
                  DIST=$DIST

              block: true
- job:
    name: dashboard_v2
    node: master
    project-type: multijob
    concurrent: true
    properties:
        - build-discarder:
            num-to-keep: 99
        - authorization:
            anonymous:
                - job-read
                - job-status
    builders:
        - shell: "git clone https://github.com/suse/sesci ."
        - shell: "python -u create-ovh-server.py"
        - shell: "cat ${TARGET_FILE}"
        - inject:
            properties-file: ${TARGET_FILE}
        - system-groovy:
            command: !include-raw: create-jenkins-node.groovy
        - multijob:
            name: Run tests
            condition: ALWAYS
            projects:
                - name: dashboard_v2-run
                  current-parameters: true
                  abort-all-job: true
                  property-file: '${TARGET_FILE}'
        - system-groovy:
            command: !include-raw: delete-jenkins-node.groovy
        - shell: "python -u delete-ovh-server.py"
        - copyartifact:
            project: dashboard_v2-run
            filter: 'build/**, src/**/*.log, src/**/*.trs, **/coverage*.xml, **/junit.*.xml'
            optional: true
            which-build: multijob-build
        - shell: |
            case $CEPH_BRANCH in
            ses3|ses4|jewel)
                python convert-trs-to-junit.py src res
                ;;
            *)
                python convert-ctest-to-junit.py
                ;;
            esac

    wrappers:
        - workspace-cleanup
        - credentials-binding:
            - file:
                credential-id: 'storage-os-conf'
                variable: OVH_CONF
            - file:
                credential-id: 'storage-automation-secret-file'
                variable: SECRET_FILE
    publishers:
        - junit:
            results: '**/junit.*.xml'
            #allow-empty-results: true
            #junit-attachments: true
        - cobertura:
            report-file: "**/coverage*.xml"
            fail-no-reports: "true"
            #source-encoding: "ASCII"
            targets:
                - method:
                    healthy: 80
                    unhealthy: 0
                    failing: 0
                - line:
                    healthy: 80
                    unhealthy: 0
                    failing: 0
                - conditional:
                    healthy: 70
                    unhealthy: 0
                    failing: 0

    parameters:
        - string:
            name: DIST
        - string:
            name: CEPH_REF
        - string:
            name: CEPH_BRANCH
        - string:
            name: TARGET_FILE
            default: target.properties
        - string:
            name: TARGET_FLAVOR
            default: hg-15-ssd
        - string:
            name: TARGET_IMAGE
        - string:
            name: CEPH_REPO_URL
            default: 'https://github.com/openattic/ceph.git'
        - bool:
            name: DESTROY_ENVIRONMENT
            default: true


- job:
    name: dashboard_v2-run
    workspace: 'ws/dbrd'        
    concurrent: true
    properties:
        - build-discarder:
            num-to-keep: 99
        - authorization:
            anonymous:
                - job-read
                - job-status
        - groovy-label:
            script: 'binding.getVariables().get("TARGET_NAME")'
    wrappers:
        - workspace-cleanup
        - ansicolor
        - timeout:
            timeout: 240
    scm:
        - git:
            url: '$CEPH_REPO_URL'
            refspec: '+refs/pull/*:refs/remotes/origin/pr/*'
            branches:
                - '$CEPH_REF'
    builders:
        - shell: |
            echo $(hostname -i) $(hostname -f)
            cat /etc/os-release

        - shell: |
            zypper install -y ccache gcc7-c++ psmisc npm
            export CC=gcc-7
            export CXX=$(which g++-7)
            ./install-deps.sh
            ./do_cmake.sh -DWITH_CCACHE=ON -DWITH_TESTS=OFF -DWITH_PYTHON3=ON
            pushd build
            make -j8
            popd
        - shell: |
            virtualenv v
            source v/bin/activate
            pip install --upgrade pip
            pip install tox coverage
            export PATH=$PWD/build/bin:$PATH
            pushd src/pybind/mgr/dashboard_v2
            tox -r
            popd
        - shell: |
            pushd src/pybind/mgr/dashboard_v2/frontend
            npm install
            npm run build -- --prod
            npm run test -- --code-coverage=true --browsers PhantomJS --watch=false
            #./node_modules/@angular/cli/bin/ng test --code-coverage=true --browsers PhantomJS --watch=false
            mv coverage/cobertura-coverage.xml ../coverage_frontend.xml || true
            mv junit.frontend.xml .. || true
            npm run lint
            popd
    publishers:
        - archive:
            artifacts: "build/Testing/**,build/**/*.log,src/**/*.trs,src/**/*.log,test-suite.log,/var/lib/systemd/coredump/*.xz,**/junit.*.xml,**/coverage*.xml"
            allow-empty: true
            default-excludes: true
        - junit:
            results: '**/junit.*.xml'
            #allow-empty-results: true
            #junit-attachments: true
        - cobertura:
            report-file: "**/coverage*.xml"
            fail-no-reports: "true"
            #source-encoding: "ASCII"
            targets:
                - method:
                    healthy: 80
                    unhealthy: 0
                    failing: 0
                - line:
                    healthy: 80
                    unhealthy: 0
                    failing: 0
                - conditional:
                    healthy: 70
                    unhealthy: 0
                    failing: 0

    parameters:
        - string:
            name: CEPH_REPO_URL
        - string:
            name: CEPH_BRANCH
        - string:
            name: CEPH_REF
        - string:
            name: TARGET_NAME
        - string:
            name: DIST


