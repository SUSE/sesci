#jenkins-jobs --conf storage-ci.suse.de.ini update deepsea-teuthology.yaml 
- project:
    name: teuthology-deploy
    provider:
        - 'ovh':
                cloud: 'gra'
                mtype: 'gra'
        - 'ecp':
                cloud: 'ecp'
                mtype: 'ecp'
    jobs:
        - 'teuthology_deploy'

- job-template:
    id: 'teuthology_deploy'
    name: 'teuthology-deploy-{provider}'
    concurrent: true
    project-type: multijob
    node: storage-compute
    parameters:
        - string:
            name: TEUTH_NAME
            default: "libcloud"
            description: Teuthology instance name, what should be provided with '--name'
        - string:
            name: TEUTH_BRANCH
            default: "master"
            description: Teuthology branch'
        - bool:
            name: DESTROY_ENVIRONMENT
            default: true
    properties:
        - build-discarder:
            num-to-keep: 20
        - authorization:
            anonymous:
                - job-read
                - job-status
    wrappers:
        - workspace-cleanup
        - ansicolor
        - timestamps
        # - build-name: { name: '#$BUILD_NUMBER $chainlevel-$ses_version' }
        - credentials-binding:
            - file:
                credential-id: 'teuthology-deploy-libcloud-{provider}-yaml'
                variable: LIBCLOUD_YAML
            - file:
                credential-id: 'teuthology-deploy-github-pull-request-opensuse-{provider}-config'
                variable: TEUTH_CONF
            - file:
                credential-id: 'storage-automation-secret-file'
                variable: SECRET_FILE
    builders:
        - shell: "git clone https://github.com/suse/sesci"
        - shell: "git clone https://github.com/kshtsk/teuthology -b wip-deploy"
        # do not include-raw the source because jjb requires {} escaped
        # variables if there are used templates
        - shell: |
            export LOGPROCVENV=$PWD/logproc-env
            virtualenv -p python3 $LOGPROCVENV
            (
                . $LOGPROCVENV/bin/activate
                pip install docopt jinja2 pyyaml
                deactivate
            )
        - shell: |
            export SESCI=$PWD/sesci
            export LOGS=$PWD/logs
            . $SESCI/common/teuthology

            set -ex
            cd teuthology
            ./bootstrap
            source virtualenv/bin/activate
            #virtualenv v
            #. v/bin/activate
            #pip install ansible==2.8.4 python-openstackclient
            git clone https://github.com/ceph/ceph-cm-ansible -b master

            #cp openstack/userdata-{provider}.yaml.orig openstack/userdata-{provider}.yaml
            export LOGIN_USER=opensuse
            RESULT=0
            mkdir -p $LOGS
            TEUTH_SUITE_LOG=$LOGS/teuthology-suite.log
            TEUTH_DEPLOY_LOG=$LOGS/teuthology-deploy.log
            TEUTH_CLEANUP_LOG=$LOGS/teuthology-cleanup.log

            export OS_IMAGE=openSUSE-Leap-15.3-JeOS.x86_64-15.3-OpenStack-Cloud-Build9.258
            export TEUTH_IDENTITY=$SECRET_FILE
            #export TERRAFORM_STATE=$LOGS/$TEUTH_NAME.tfstate
            teuthology-deploy --clean --name $TEUTH_NAME || true
            teuthology-deploy -N --os-cloud {cloud} --os-image $OS_IMAGE --os-keypair storage-automation -i $SECRET_FILE -u $LOGIN_USER --name $TEUTH_NAME --ceph-cm-ansible $PWD/ceph-cm-ansible --teuthology-repo https://github.com/ceph/teuthology@$TEUTH_BRANCH -L $LIBCLOUD_YAML --workers 8 --target 50 -v || $RESULT=$?
            #./deploy-teuthology --debug --name $TEUTH_NAME --cloud {cloud} --rebuild --ns --workers 8 --targets 50 --ref $TEUTH_BRANCH || RESULT=$?
            if (( RESULT==0 )) ; then
            (
                #export TEUTH_HOST=$(terraform output -state=$TERRAFORM_STATE ip)
                export TEUTH_HOST=$(jq -r ".access_address" ~/.teuthology/deploy/$TEUTH_NAME/meta.json)
                TEUTH_SUITE=smoke
                CEPH_BRANCH=octopus
                set -o pipefail
                ssh -i $SECRET_FILE runner@$TEUTH_HOST "
                [[ -f .profile ]]           && source .profile
                [[ -f .bashrc_teuthology ]] && source .bashrc_teuthology
                teuthology-suite -v --machine-type {mtype} \
                    --ceph $CEPH_BRANCH --suite $TEUTH_SUITE \
                    -d centos -D 7.6 \
                    --filter-out ubuntu,rhel,7.7,rados_bench,kclient_workunit_suites_dbench,cfuse_workunit_suites_iozone,_s3tests \
                    --limit 2 \
                    --seed 0 \
                    --newest 100 \
                    " 2>&1 | tee $TEUTH_SUITE_LOG


            ) || RESULT=$?
            fi
            echo $RESULT > $LOGS/result
        - description-setter:
            regexp: 'Test results viewable at ([^\s]*)'
            description: |
                <a href="\1" title="Go to Pulpito Run Page">Pulpito</a>
        - shell: |
            export LOGPROCVENV=$PWD/logproc-env
            TEUTH_SUITE=smoke
            export SESCI=$PWD/sesci
            export LOGS=$PWD/logs
            RESULT=$(cat $LOGS/result)
            . $SESCI/common/teuthology
            TEUTH_SUITE_LOG=$LOGS/teuthology-suite.log
            TEUTH_WAIT_LOG=$LOGS/teuthology-wait.log
            #export TERRAFORM_STATE=$LOGS/$TEUTH_NAME.tfstate
            #export TEUTH_HOST=$(terraform output -state=$TERRAFORM_STATE ip)
            function cleanup() {{
              if $DESTROY_ENVIRONMENT ; then
                cd teuthology
                source virtualenv/bin/activate
                teuthology-deploy --clean -n $TEUTH_NAME
              fi
            }}
            trap cleanup EXIT
            export TEUTH_HOST=$(jq -r ".access_address" ~/.teuthology/deploy/$TEUTH_NAME/meta.json)
            export TEUTH_ARCHIVE=/home/worker/archive
            runname=$(grep 'Job scheduled with name' $TEUTH_SUITE_LOG | head -1 | \
                      perl -n -e'/name ([^ ]+)/ && CORE::say $1')
            if [[ -n "$runname" ]] ; then
            (
              pulpito=$(grep 'Test results' $TEUTH_SUITE_LOG | \
                        sed -E 's/.* viewable at ([^\w]*)$/\1/g')

              set -o pipefail
              ssh -i $SECRET_FILE runner@$TEUTH_HOST "
              [[ -f .profile ]]           && source .profile
              [[ -f .bashrc_teuthology ]] && source .bashrc_teuthology
              teuthology-wait -v --run $runname 2>&1" | tee $TEUTH_WAIT_LOG

              failed=$(grep -sc 'teuthology.suite:fail' $TEUTH_WAIT_LOG)
              passed=$(grep -sc 'teuthology.suite:pass' $TEUTH_WAIT_LOG)
              dead=$(grep -sc 'teuthology.suite:dead' $TEUTH_WAIT_LOG)

              runpath=$LOGS/run
              mkdir -p $runpath
              scp -r -i $SECRET_FILE worker@$TEUTH_HOST:$TEUTH_ARCHIVE/$runname/* $runpath

              alljobs=( $(ls $runpath | grep -E '^[[:digit:]]+$') )
              total=${{#alljobs[@]}}

              make_teuthology_junit $runpath $LOGS/junit-report.xml $TEUTH_SUITE "teuthology"
              (
                export LC_ALL=en_US.UTF-8
                source $LOGPROCVENV/bin/activate
                make_teuthology_report "$runname" "$runpath" "$pulpito"
              )

              echo TOTAL: $total
              echo PASS: $passed
              echo FAIL: $failed
              echo DEAD: $dead
              echo JOBS: ${{alljobs[@]##*/}}
              if [ $((fails + deads)) -gt 0 ] ; then
                  echo "ERROR: There are failed jobs"
                  exit 1
              fi
              if [ $((fails + deads + passed)) -eq 0 ] ; then
                  echo "ERROR: Neither jobs passed, nor failed"
                  exit 2
              fi
            ) || RESULT=$?
            else
              echo "ERROR: No run scheduled" > /dev/stderr
            fi

            echo $RESULT > $LOGS/result
            exit $RESULT


    publishers:
        - description-setter:
            regexp: 'Test results viewable at ([^\s]*)'
            description:
                <a href="/job/$JOB_NAME/$BUILD_NUMBER/testReport" title="Go to Test Results">Test Results</a> &bull;
                <a href="/job/$JOB_NAME/$BUILD_NUMBER/artifact" title="Go to Jenkins build artifacts">Build Artifacts</a> &bull;
                <a href="/job/$JOB_NAME/$BUILD_NUMBER/artifact/logs/run/index.html" title="Go to Teuthology Run Report">Run Report</a>
            regexp-for-failed: 'Test results viewable at ([^\s]*)'
            description-for-failed:
                <a href="/job/$JOB_NAME/$BUILD_NUMBER/testReport" title="Go to Test Results">Test Results</a> &bull;
                <a href="/job/$JOB_NAME/$BUILD_NUMBER/artifact" title="Go to Jenkins build artifacts">Build Artifacts</a> &bull;
                <a href="/job/$JOB_NAME/$BUILD_NUMBER/artifact/logs/run/index.html" title="Go to Teuthology Run Report">Run Report</a>
        - archive:
            artifacts: "logs/**,*.log,*.yaml,**/junit*.xml"
            allow-empty: true
        - junit:
            results: '**/junit*.xml'
            allow-empty-results: true
            junit-attachments: true
- job:
    name: 'pr-teuthology-deploy'
    concurrent: true
    project-type: multijob
    node: storage-compute
    parameters:
        - string:
            name: NAME
            default: "ci"
            description: Teuthology instance name, what should be provided with '--name'
    properties:
        - github:
            url: 'https://github.com/ceph/teuthology/'
            display-name: suse-deepsea
        - build-discarder:
            num-to-keep: 20
        - authorization:
            anonymous:
                - job-read
                - job-status
                - job-discover
    wrappers:
        - workspace-cleanup
        - ansicolor
        - timestamps
    triggers:
        - github-pull-request:
            #admin-list:
            #    - susebot
            #    - kshtsk
            #white-list:
            #    - jan--f
            #    - votdev 
            #    - mogeb 
            org-list: ['suse', 'SUSE']
            cron: 'H/2 * * * *'
            #build-desc-template: "Ceph Pull Request"
            #trigger-phrase: 'ok to test'
            trigger-phrase: '\W*@susebot\W+run\W+deploy(\W+.*)?'
            only-trigger-phrase: true
            permit-all: true
            allow-whitelist-orgs-as-admins: true
            #auto-close-on-fail: false
            #!!!!!!!!!!!! Add at least one NONE target branch if 'only-trigger-phrase' == true
            # so newly created jobs will not be scheduled for all PRs.
            white-list-target-branches:
                - NONE
                - master
            auth-id: 'susebot'
            status-add-test-results: false
            #status-context: 'storage-ci/deepsea-make-rpm'
            status-context: '--none--'
            triggered-status: '--none--'
            started-status: '--none--'
            error-status: '--none--'
            success-status: '--none--'
            failure-status: '--none--'
            #error-comment: "Unexpected error in the make check"
            success-comment: |
                Commit $ghprbActualCommit is *OK*.
                Check tests results in the Jenkins job: $BUILD_URL
            failure-comment: |
                Commit $ghprbActualCommit is *NOT OK*.
                Check tests results in the Jenkins job: $BUILD_URL
            # don't cancel build, because it aborts the top level job
            # and that does not allow cleanup ovh resources
            cancel-builds-on-update: true
            #comment-file: 'logs/report.txt'
    builders:
        - shell: "git clone https://github.com/suse/sesci"
        #- shell: |
        #    mkdir -p logs
        #    touch logs/report.txt
        #- shell:
        #    !include-raw:
        #        - snippets/bash-ex.bash
        #        - snippets/deepsea-trigger.bash
        #        - snippets/deepsea-pr-properties.sh
        #- inject:
        #    properties-file: 'deepsea-pr.properties'
        - multijob:
            name: Deploy teuthology
            condition: ALWAYS
            #condition: SUCCESSFUL
            #execution-type: 'PARALLEL'
            #execution-type: 'SEQUENTIALLY'
            projects:
                - name: teuthology-deploy-ovh
                  current-parameters: false
                  abort-all-job: true
                  #property-file: '${TARGET_FILE}'
                  predefined-parameters: |
                    TEUTH_NAME=pr-$ghprbPullId
                    TEUTH_BRANCH=$sha1
                    TEUTH_TARGET=$ghprbTargetBranch
    publishers:
        - archive:
            artifacts: "logs/**,*.log,*.yaml,**/junit*.xml"
            allow-empty: true
        - junit:
            results: '**/junit*.xml'
            allow-empty-results: true
            junit-attachments: true
