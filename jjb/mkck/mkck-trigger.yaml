---
# Begin Macros
- builder:
    name: create_sesci_venv
    builders:
      - shell: |
          virtualenv v
          . v/bin/activate
          pip install -U pip
          pip install python-openstackclient openstacksdk docopt PyYaml paramiko

- builder:
    name: os_server_create
    builders:
      - shell: |
          . v/bin/activate
          STATUS=$PWD/mkck.status
          cd sesci && OS_CLOUD=$TARGET_CLOUD python -u os-server.py -a create -f conf/$CONF.yaml -s $STATUS

- builder:
    name: os_server_delete
    builders:
      - shell: |
          if ! $DESTROY_ENVIRONMENT ; then exit 0 ; fi
          . v/bin/activate
          STATUS=$PWD/mkck.status
          cd sesci && OS_CLOUD=$TARGET_CLOUD python -u os-server.py -a delete -s $STATUS

- builder:
    name: ctest_to_junit
    builders:
      - shell: |
          python sesci/convert-ctest-to-junit.py

- builder:
    name: deliver_artifacts_sles
    builders:
      - multijob:
          name: Deliver artifacts
          #condition: ALWAYS
          condition: SUCCESSFUL
          projects:
            - name: storage-deliver-mkck-artifact
              current-parameters: true
              abort-all-job: true
              predefined-parameters: |
                DIST_CEPH={dist_ceph}
                SITE=ovh.net
      - copyartifact:
          project: storage-deliver-mkck-artifact
          parameter-filters: 'DIST_CEPH={dist_ceph}'
          filter: 'artifacts*.yaml'
          optional: false
          which-build: 'multijob-build'
      - copyartifact:
          project: storage-deliver-update-repos
          parameter-filters: 'SES_VER={ses_ver},SITE=ovh.net'
          filter: 'artifacts*.yaml'
          optional: true
          #target: ''
          which-build: 'last-successful'
      - shell: |
          . v/bin/activate
          . sesci/common/util
          for i in artifacts*.yaml ; do
            cat $i
          done

- builder:
    name: deliver_artifacts_leap
    builders: []

- builder:
    name: deliver_artifacts_tumbleweed
    builders: []

- builder:
    name: enable_repos_sles
    builders:
      - shell: |
          . v/bin/activate
          . sesci/common/util
          for i in artifacts*.yaml ; do
            # now jq black magic
            cat $i | yj | \
              jq -r ' .artifacts as $a | $a | keys[] | . as $k | "zypper -n addrepo --refresh --no-gpgcheck " + (if (split("!") | length) > 1 then " -p " + split("!")[1] + " " else "" end) + $a[$k].url + " " + split("!")[0] + " || true"' | \
              ssh root@$TARGET_IP
          done

- builder:
    name: enable_repos_leap
    builders:
      - multijob:
          name: Basic repository setup
          condition: SUCCESSFUL
          projects:
            - name: basic-repos
              current-parameters: true
              abort-all-job: true
              property-file: '${TARGET_FILE}'

- builder:
    name: enable_repos_tumbleweed
    builders: []

# End Macros


- project:
    name: run-make-check
    dist:
        - 'sles':
            disabled: true
            target: b2-60
        - 'leap':
            disabled: false
            target: b2-60
    jobs:
        - 'mkck_dist'

- project:
    name: run-make-check-nightly
    dist_ceph:
        - 'leap-ses6':
            dist_name: 'leap'
            dist_ver: '15.1'
            disabled: false
            target: b2-60
            branch: 'ses6'
            ref: 'ses6'
            repo: 'https://github.com/suse/ceph.git'
            ses_ver: '6.0'
        - 'leap-ses7':
            dist_name: 'leap'
            dist_ver: '15.2'
            disabled: false
            target: b2-60
            branch: 'ses7'
            ref: 'ses7'
            repo: 'https://github.com/suse/ceph.git'
            ses_ver: '7.0'
        - 'tumbleweed-ceph':
            dist_name: 'tumbleweed'
            dist_ver: 'xxxx'
            disabled: false
            target: b2-60
            branch: 'master'
            ref: 'master'
            repo: 'https://github.com/ceph/ceph.git'
            ses_ver: '7.0'
        - 'leap-ceph-master':
            dist_name: 'leap'
            dist_ver: '15.2'
            disabled: false
            target: b2-60
            branch: 'master'
            ref: 'master'
            repo: 'https://github.com/ceph/ceph.git'
            ses_ver: '7.0'
        - 'leap-ceph-nautilus':
            dist_name: 'leap'
            dist_ver: '15.1'
            disabled: false
            target: b2-60
            branch: 'nautilus'
            ref: 'nautilus'
            repo: 'https://github.com/ceph/ceph.git'
            ses_ver: '5.0'
        - 'leap-ceph-octopus':
            dist_name: 'leap'
            dist_ver: '15.2'
            disabled: false
            target: b2-60
            branch: 'octopus'
            ref: 'octopus'
            repo: 'https://github.com/ceph/ceph.git'
            ses_ver: '7.0'
        - 'sles-ses5':
            dist_name: 'sles'
            dist_ver: '12.3'
            disabled: false
            target: b2-60
            branch: 'ses5'
            ref: 'ses5'
            repo: 'https://github.com/suse/ceph.git'
            ses_ver: '5.0'
        - 'sles-ses6':
            dist_name: 'sles'
            dist_ver: '15.1'
            disabled: false
            target: b2-60
            branch: 'ses6'
            ref: 'ses6'
            ses_ver: '6.0'
            repo: 'https://github.com/suse/ceph.git'
        - 'sles-ses7':
            dist_name: 'sles'
            dist_ver: '15.2'
            disabled: false
            target: b2-60
            branch: 'ses7'
            ref: 'ses7'
            ses_ver: '7.0'
            repo: 'https://github.com/suse/ceph.git'
    jobs:
        - 'mkck_dist_branch'

- job-template:
    id: 'mkck_dist'
    name: 'mkck-{dist}'
    concurrent: true
    disabled: '{obj:disabled}'
    project-type: multijob
    node: storage-compute
    parameters:
        - string:
            name: TARGET_CLOUD
            default: 'sbg'
            description: "OVH region"
        - string:
            name: TARGET_FLAVOR
            default: b2-60
            description: "OVH flavor"
        - string:
            name: TARGET_FILE
            default: 'mkck_{dist}.properties'
        - string:
            name: DIST
            default: '{dist}'
        - string:
            name: CEPH_REF
            default: '$sha1'
        - string:
            name: CEPH_REPO_URL
            default: https://github.com/suse/ceph.git
        - string:
            name: CEPH_BRANCH
            default: '$ghprbTargetBranch'
        - bool:
            name: DESTROY_ENVIRONMENT
            default: true
        - string:
            name: PR
            default: '${{ghprbPullId}}'
    properties:
        - github:
            url: 'https://github.com/suse/ceph/'
            display-name: ceph
        - build-discarder:
            num-to-keep: 100
        - authorization:
            anonymous:
                - job-read
                - job-status
                - job-discover
    wrappers:
        - workspace-cleanup
        - ansicolor
    triggers:
        - github-pull-request:
            #admin-list:
            #white-list:
            org-list: ['suse', 'SUSE']
            #cron: 'H/5 * * * *'
            cron: 'H/2 * * * *'
            #build-desc-template: "Ceph Pull Request"
            trigger-phrase: 'ok to test'
            #only-trigger-phrase: false
            permit-all: true
            allow-whitelist-orgs-as-admins: true
            #auto-close-on-faile: false
            white-list-target-branches:
                - ses3
                - ses4
                - ses5
                - ses6
                - ses7
            auth-id: 'susebot'
            status-add-test-results: true
            status-context: "sesci/mkck-{dist}"
            triggered-status: "make check triggered"
            started-status: "make check started"
            error-status: "Unexpected error in the make check"
            success-status: "The make check passed"
            failure-status: "The make check failed"
            #error-comment: "Unexpected error in the make check"
            #success-comment: "The make check passed"
            #failure-comment: "The make check failed"
            # don't cancel build, because it aborts the top level job
            # and that does not allow cleanup ovh resources
            #cancel-builds-on-update: true
    builders:
        - shell:
            !include-raw-escape:
                - snippets/mkck-target-properties.bash
        - inject:
            properties-file: 'target.properties'
        - shell: "git clone https://github.com/suse/sesci"
        - create_sesci_venv
        - os_server_create
        - shell: |
            addr=$(jq -r .server.ip mkck.status)
            name=$(jq -r .server.name mkck.status)
            cat > $TARGET_FILE <<EOF
            TARGET_IP=$addr
            TARGET_NAME=$name
            EOF

        - inject:
            properties-file: $TARGET_FILE
        - multijob:
            name: Create jenkins executor
            condition: ALWAYS
            projects:
                - name: jenkins-executor-create
                  current-parameters: true
                  abort-all-job: true
                  property-file: '${{TARGET_FILE}}'
        - enable_repos_{dist}
        - multijob:
            name: Run make check
            condition: ALWAYS
            projects:
                - name: mkck-run
                  current-parameters: true
                  abort-all-job: true
                  property-file: '${{TARGET_FILE}}'
        - multijob:
            name: Delete jenkins executor
            condition: ALWAYS
            projects:
                - name: jenkins-executor-delete
                  current-parameters: true
                  abort-all-job: true
                  property-file: '${{TARGET_FILE}}'
        - copyartifact:
            project: mkck-run
            filter: 'build/**, src/**/*.log, src/**/*.trs'
            optional: true
            which-build: multijob-build
        - os_server_delete
        - ctest_to_junit

    wrappers:
        - workspace-cleanup
        - build-name: { name: '#$BUILD_NUMBER PR$PR $DIST $CEPH_BRANCH' }
        - credentials-binding:
            - file:
                credential-id: 'storage-automation-secret-file'
                variable: SECRET_FILE
    publishers:
        - junit:
            results: 'res/make-check.xml'
            allow-empty-results: true
            junit-attachments: true


- job:
    name: basic-repos
    description: "Add basic repositories"
    wrappers:
        - workspace-cleanup
        - timestamps
        - timeout:
            timeout: 10
        - build-name: { name: '#$BUILD_NUMBER openSUSE Leap $VERSION' }
    properties:
        - groovy-label:
            script: 'binding.getVariables().get("TARGET_NAME")'
    builders:
      - shell: |
          if [ -f /etc/os-release ]; then
            . /etc/os-release

            case $ID in
            "opensuse-leap")
              zypper -n ar http://download.opensuse.org/distribution/leap/${VERSION_ID}/repo/oss/ oss
              zypper -n ar http://download.opensuse.org/update/leap/${VERSION_ID}/oss/ update
              ;;
            *)
            echo "No repository setup for $ID"
            ;;
            esac
          else
            echo "No /etc/os-release found"
          fi


- job:
    name: mkck
    node: storage-compute
    project-type: multijob
    concurrent: true
    properties:
        - build-discarder:
            num-to-keep: 100
        - authorization:
            anonymous:
                - job-read
                - job-status
    builders:
        - shell: "git clone https://github.com/suse/sesci"
        - create_sesci_venv
        - os_server_create
        - shell: |
            addr=$(jq -r .server.ip mkck.status)
            name=$(jq -r .server.name mkck.status)
            cat > ${TARGET_FILE} <<EOF
            TARGET_IP=$addr
            TARGET_NAME=$name
            EOF

        - inject:
            properties-file: ${TARGET_FILE}
        - system-groovy:
            command: !include-raw: create-jenkins-node.groovy
        - multijob:
            name: Ceph run-make-check
            condition: ALWAYS
            projects:
                - name: mkck-run
                  current-parameters: true
                  abort-all-job: true
                  property-file: '${TARGET_FILE}'
        - system-groovy:
            command: !include-raw: delete-jenkins-node.groovy
        - copyartifact:
            project: mkck-run
            filter: 'build/**, src/**/*.log, src/**/*.trs'
            optional: true
            which-build: multijob-build
        - os_server_delete
        - ctest_to_junit

    wrappers:
        - workspace-cleanup
        - build-name: { name: '#$BUILD_NUMBER PR$PR $DIST $CEPH_BRANCH' }
        - credentials-binding:
            #- file:
            #    credential-id: 'storage-os-conf'
            #    variable: OVH_CONF
            - file:
                credential-id: 'storage-automation-secret-file'
                variable: SECRET_FILE
    publishers:
        - junit:
            results: 'res/make-check.xml'
            allow-empty-results: true
            junit-attachments: true

    parameters:
        - string:
            name: DIST
        - string:
            name: PR
        - string:
            name: CONF
        - string:
            name: CEPH_REF
        - string:
            name: CEPH_BRANCH
        - string:
            name: TARGET_FILE
            default: mkck.properties
        - string:
            name: TARGET_CLOUD
            default: 'sbg'
        - string:
            name: TARGET_FLAVOR
            #default: hg-15-ssd
            default: b2-30
        - string:
            name: TARGET_IMAGE
        - string:
            name: CEPH_REPO_URL
            default: 'https://github.com/suse/ceph.git'
        - bool:
            name: DESTROY_ENVIRONMENT
            default: true


- job:
    name: mkck-run
    workspace: 'ws/mkck'
    concurrent: true
    properties:
        - build-discarder:
            num-to-keep: 100
        - authorization:
            anonymous:
                - job-read
                - job-status
        - groovy-label:
            script: 'binding.getVariables().get("TARGET_NAME")'
    wrappers:
        - workspace-cleanup
        - timestamps
        - timeout:
            timeout: 240
        - build-name: { name: '#$BUILD_NUMBER $DIST $CEPH_BRANCH $PR' }
    scm:
        - git:
            url: '$CEPH_REPO_URL'
            refspec: '+refs/pull/*:refs/remotes/origin/pr/*'
            branches:
                - '$CEPH_REF'
            timeout: 15
    builders:
        - shell: |
            echo $(hostname -i) $(hostname -f)
            cat /etc/os-release

            ./run-make-check.sh -DWITH_LTTNG=false -DWITH_BABELTRACE=false
    publishers:
        - archive:
            artifacts: "build/Testing/**,build/**/*.log,src/**/*.trs,src/**/*.log,test-suite.log,/var/lib/systemd/coredump/*.xz"
            allow-empty: true
            default-excludes: true
    parameters:
        - string:
            name: CEPH_REPO_URL
        - string:
            name: CEPH_BRANCH
        - string:
            name: CEPH_REF
        - string:
            name: TARGET_NAME
        - string:
            name: DIST
        - string:
            name: PR


- job-template:
    id: 'mkck_dist_branch'
    name: 'mkck-{dist_ceph}'
    concurrent: true
    disabled: '{obj:disabled}'
    project-type: multijob
    node: storage-compute
    parameters:
        - string:
            name: TARGET_CLOUD
            default: 'sbg'
        - string:
            name: TARGET_FLAVOR
            default: b2-60
            description: "OVH flavor"
        - string:
            name: TARGET_FILE
            default: 'mkck_{dist_ceph}.properties'
        - string:
            name: DIST
            default: '{dist_name}'
        - string:
            name: CEPH_REF
            default: '{ref}'
        - string:
            name: CEPH_REPO_URL
            default: '{repo}'
        - string:
            name: CEPH_BRANCH
            default: '{branch}'
        - string:
            name: CI_BRANCH
            default: 'master'
        - bool:
            name: DESTROY_ENVIRONMENT
            default: true
    properties:
        - github:
            url: '{repo}'
            display-name: ceph
        - build-discarder:
            num-to-keep: 100
        - authorization:
            anonymous:
                - job-read
                - job-status
                - job-discover
    triggers:
        - timed: "15 1 * * 1-5"
    wrappers:
        - workspace-cleanup
        - ansicolor
    builders:
        - shell:
            !include-raw-escape:
                - snippets/mkck-target-properties.bash
        - inject:
            properties-file: 'target.properties'
        - shell: "git clone https://github.com/suse/sesci -b $CI_BRANCH"
        - create_sesci_venv
        - deliver_artifacts_{dist_name}:
            dist_ceph: '{dist_ceph}'
            ses_ver: '{ses_ver}'
        - os_server_create
        - shell: |
            addr=$(jq -r .server.ip mkck.status)
            name=$(jq -r .server.name mkck.status)
            cat > $TARGET_FILE <<EOF
            TARGET_IP=$addr
            TARGET_NAME=$name
            EOF
        - inject:
            properties-file: $TARGET_FILE

        - multijob:
            name: Create jenkins executor
            condition: ALWAYS
            projects:
                - name: jenkins-executor-create
                  current-parameters: true
                  abort-all-job: true
                  property-file: '${{TARGET_FILE}}'
        - enable_repos_{dist_name}
        - multijob:
            name: Run make check
            condition: ALWAYS
            projects:
                - name: mkck-run
                  current-parameters: true
                  abort-all-job: true
                  property-file: '${{TARGET_FILE}}'
        - multijob:
            name: Delete jenkins executor
            condition: ALWAYS
            projects:
                - name: jenkins-executor-delete
                  current-parameters: true
                  abort-all-job: true
                  property-file: '${{TARGET_FILE}}'
        - copyartifact:
            project: mkck-run
            filter: 'build/**, src/**/*.log, src/**/*.trs'
            optional: true
            which-build: multijob-build
        - os_server_delete
        - ctest_to_junit

    wrappers:
        - workspace-cleanup
        - build-name: { name: '#$BUILD_NUMBER $DIST $CEPH_BRANCH' }
        - credentials-binding:
            - file:
                credential-id: 'storage-automation-secret-file'
                variable: SECRET_FILE
    publishers:
        - junit:
            results: 'res/make-check.xml'
            allow-empty-results: true
            junit-attachments: true
        - rocket:
            channel: '#ceph-build'
            failure: true
            #success: true
            unstable: true
            #not-built: true
            back-to-normal: true
            repeated-failure: true
            include-test-summary: true
            build-server: 'http://ci.ses.suse.de:8080/'

- project:
    name: jenkins-executor
    action:
        - 'create':
            script: 'create-jenkins-node.groovy'
        - 'delete':
            script: 'delete-jenkins-node.groovy'
    jobs:
        - 'jenkins_executor'

- job-template:
    id: 'jenkins_executor'
    name: 'jenkins-executor-{action}'
    concurrent: true
    project-type: freestyle
    node: storage-compute
    parameters:
        - string:
            name: TARGET_NAME
            default: ''
            description: "Jenkins Node Name"
        - string:
            name: TARGET_IP
            default: ''
            description: "Jenkins Node IP address"
    properties:
        - build-discarder:
            num-to-keep: 100
        - authorization:
            anonymous:
                - job-read
                - job-status
                - job-discover
    builders:
        - system-groovy:
            command: !include-raw-escape: '{script}'
    wrappers:
        - workspace-cleanup
        - build-name: { name: '#$BUILD_NUMBER $TARGET_NAME:$TARGET_IP' }
